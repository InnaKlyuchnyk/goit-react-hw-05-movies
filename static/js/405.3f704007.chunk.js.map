{"version":3,"file":"static/js/405.3f704007.chunk.js","mappings":"sSAAMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACqBC,MAAM,GAAD,OAC1BF,EAD0B,oCACUD,IAEtCI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCG,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACsBX,MAAM,GAAD,OAC3BF,EAD2B,iBACVa,EADU,oBACSd,EADT,oBAG7BI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCM,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,uFACoBX,MAAM,GAAD,OACzBF,EADyB,iBACRa,EADQ,4BACmBd,EADnB,oBAG3BI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCQ,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,uFACiBX,MAAM,GAAD,OACtBF,EADsB,iBACLa,EADK,4BACsBd,EADtB,2BAGxBI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCU,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,uFACgBlB,MAAM,GAAD,OACrBF,EADqB,gCACWD,EADX,iCAC2CqB,EAD3C,gCAGvBjB,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCa,EADD,yBAWEA,GAXF,oE,8FCjCP,UAlB2B,WACzB,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAS,mCAAG,+FACHd,EAAAA,EAAAA,IAAYF,GACtBV,KAAKsB,GACLK,SAAQ,kBAAMH,GAAW,MAHZ,mFAAH,qDAKfE,MACC,CAAChB,IACG,CAAEW,KAAAA,EAAME,QAAAA","sources":["services/fetches.js","views/ActorCard/useFetchActorsCast.js"],"sourcesContent":["const API_KEY = 'b5cd3fae011a36a857068d95d756f08e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendCollection() {\n  const trendMovies = await fetch(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return trendMovies;\n}\n\nexport async function movieDetails(movieId) {\n  const oneMovieInfo = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return oneMovieInfo;\n}\n\nexport async function movieActors(movieId) {\n  const actorsInfo = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return actorsInfo;\n}\n\nexport async function movieReviews(movieId) {\n  const reviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return reviews;\n}\n\nexport async function fetchMoviesByKeyWord(value) {\n  const movies = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n\n  return movies;\n}\n","import { movieActors } from '../../services/fetches';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst useFetchActorsCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchCast = async () => {\n      return await movieActors(movieId)\n        .then(setCast)\n        .finally(() => setLoading(false));\n    };\n    fetchCast();\n  }, [movieId]);\n  return { cast, loading };\n};\n\nexport default useFetchActorsCast;\n"],"names":["API_KEY","BASE_URL","fetchTrendCollection","fetch","then","response","ok","json","catch","error","console","log","trendMovies","movieDetails","movieId","oneMovieInfo","movieActors","actorsInfo","movieReviews","reviews","fetchMoviesByKeyWord","value","movies","useParams","useState","cast","setCast","loading","setLoading","useEffect","fetchCast","finally"],"sourceRoot":""}