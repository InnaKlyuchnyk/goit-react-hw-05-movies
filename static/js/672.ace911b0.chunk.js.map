{"version":3,"file":"static/js/672.ace911b0.chunk.js","mappings":"0SAAMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACqBC,MAAM,GAAD,OAC1BF,EAD0B,oCACUD,IAEtCI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCG,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACsBX,MAAM,GAAD,OAC3BF,EAD2B,iBACVa,EADU,oBACSd,EADT,oBAG7BI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCM,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,uFACoBX,MAAM,GAAD,OACzBF,EADyB,iBACRa,EADQ,4BACmBd,EADnB,oBAG3BI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCQ,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,uFACiBX,MAAM,GAAD,OACtBF,EADsB,iBACLa,EADK,4BACsBd,EADtB,2BAGxBI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCU,EADD,yBAUEA,GAVF,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,uFACgBlB,MAAM,GAAD,OACrBF,EADqB,gCACWD,EADX,iCAC2CqB,EAD3C,gCAGvBjB,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAGnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATzB,cACCa,EADD,yBAWEA,GAXF,oE,iDCpBP,UA5BkB,WAChB,OAA0BC,EAAAA,EAAAA,WAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OACE,2BACGA,IAAW,qCACZ,wBACGD,GACCA,EAAKA,KAAKE,KAAI,SAAAC,GAAK,OACjB,2BACE,gBACEC,IACED,EAAME,aACFC,kCAAuBH,EAAME,aAfjD,8DAkBcE,IAAKJ,EAAMK,KACXC,MAAM,QACNC,OAAO,UAET,wBAAKP,EAAMK,SAXJL,EAAMQ,c,8FCM3B,UAlB2B,WACzB,IAAQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QACR,GAAwBuB,EAAAA,EAAAA,UAAS,MAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOZ,EAAP,KAAgBc,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAS,mCAAG,+FACHzB,EAAAA,EAAAA,IAAYF,GACtBV,KAAKkC,GACLI,SAAQ,kBAAMH,GAAW,MAHZ,mFAAH,qDAKfE,MACC,CAAC3B,IACG,CAAEU,KAAAA,EAAMC,QAAAA","sources":["services/fetches.js","views/ActorCard/ActorCard.js","views/ActorCard/useFetchActorsCast.js"],"sourcesContent":["const API_KEY = 'b5cd3fae011a36a857068d95d756f08e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendCollection() {\n  const trendMovies = await fetch(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return trendMovies;\n}\n\nexport async function movieDetails(movieId) {\n  const oneMovieInfo = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return oneMovieInfo;\n}\n\nexport async function movieActors(movieId) {\n  const actorsInfo = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return actorsInfo;\n}\n\nexport async function movieReviews(movieId) {\n  const reviews = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n  return reviews;\n}\n\nexport async function fetchMoviesByKeyWord(value) {\n  const movies = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(error => console.log(error));\n\n  return movies;\n}\n","import useFetchActorsCast from './useFetchActorsCast';\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/';\nconst imgSize = 'w500';\nconst defaultImg =\n  'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\nconst ActorCard = () => {\n  const { cast, loading } = useFetchActorsCast();\n\n  return (\n    <div>\n      {loading && <h2>Loading</h2>}\n      <ul>\n        {cast &&\n          cast.cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? baseImgUrl + imgSize + actor.profile_path\n                    : defaultImg\n                }\n                alt={actor.name}\n                width=\"200px\"\n                height=\"auto\"\n              />\n              <h4>{actor.name}</h4>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorCard;\n","import { movieActors } from '../../services/fetches';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst useFetchActorsCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchCast = async () => {\n      return await movieActors(movieId)\n        .then(setCast)\n        .finally(() => setLoading(false));\n    };\n    fetchCast();\n  }, [movieId]);\n  return { cast, loading };\n};\n\nexport default useFetchActorsCast;\n"],"names":["API_KEY","BASE_URL","fetchTrendCollection","fetch","then","response","ok","json","catch","error","console","log","trendMovies","movieDetails","movieId","oneMovieInfo","movieActors","actorsInfo","movieReviews","reviews","fetchMoviesByKeyWord","value","movies","useFetchActorsCast","cast","loading","map","actor","src","profile_path","baseImgUrl","alt","name","width","height","id","useParams","useState","setCast","setLoading","useEffect","fetchCast","finally"],"sourceRoot":""}